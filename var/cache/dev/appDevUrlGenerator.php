<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mailing' => array (  0 =>   array (    0 => 'codeSchedule',    1 => 'schedule',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\MailingController::ScheduledEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'schedule',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'codeSchedule',    ),    2 =>     array (      0 => 'text',      1 => '/mailing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'persistData' => array (  0 =>   array (    0 => 'encoded_stream',  ),  1 =>   array (    'encoded_stream' => NULL,    '_controller' => 'AppBundle\\Controller\\MonitorController::PersistDataAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'encoded_stream',    ),    1 =>     array (      0 => 'text',      1 => '/monitor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'generateCredentials' => array (  0 =>   array (    0 => 'encoded_credentials',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\MonitorController::ValidateCredentialsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'encoded_credentials',    ),    1 =>     array (      0 => 'text',      1 => '/monitor/validate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'dashboard2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Platform2Controller::dashboardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/v2/dashboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'processBlock2' => array (  0 =>   array (    0 => 'idProcess',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Platform2Controller::processBlockAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProcess',    ),    1 =>     array (      0 => 'text',      1 => '/v2/dashboard/process',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'processBlockUpdate2' => array (  0 =>   array (    0 => 'idProcess',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Platform2Controller::processBlockUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProcess',    ),    1 =>     array (      0 => 'text',      1 => '/v2/dashboard/update/process',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sensorData2' => array (  0 =>   array (    0 => 'idStation',    1 => 'idSensor',    2 => 'long',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Platform2Controller::sensorDataAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'long',    ),    1 =>     array (      0 => 'text',      1 => '/long',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idSensor',    ),    3 =>     array (      0 => 'text',      1 => '/sensor',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idStation',    ),    5 =>     array (      0 => 'text',      1 => '/v2/dashboard/station',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sensorDataUpdate2' => array (  0 =>   array (    0 => 'idStation',    1 => 'idSensor',    2 => 'lastId',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Platform2Controller::sensorDataUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'lastId',    ),    1 =>     array (      0 => 'text',      1 => '/lastid',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idSensor',    ),    3 =>     array (      0 => 'text',      1 => '/sensor',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idStation',    ),    5 =>     array (      0 => 'text',      1 => '/v2/dashboard/station',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'alertData2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Platform2Controller::AlertAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/v2/dashboard/alerts/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'alertDataUpdate2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Platform2Controller::AlertUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/v2/dashboard/alerts/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\PlatformController::dashboardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/dashboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'processBlock' => array (  0 =>   array (    0 => 'idProcess',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\PlatformController::processBlockAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProcess',    ),    1 =>     array (      0 => 'text',      1 => '/dashboard/process',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'processBlockUpdate' => array (  0 =>   array (    0 => 'idProcess',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\PlatformController::processBlockUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProcess',    ),    1 =>     array (      0 => 'text',      1 => '/dashboard/update/process',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'stationBlock' => array (  0 =>   array (    0 => 'idStation',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\PlatformController::stationBlockAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idStation',    ),    1 =>     array (      0 => 'text',      1 => '/dashboard/station',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'stationBlockUpdate' => array (  0 =>   array (    0 => 'idStation',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\PlatformController::stationBlockUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idStation',    ),    1 =>     array (      0 => 'text',      1 => '/dashboard/update/station',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sensorData' => array (  0 =>   array (    0 => 'idStation',    1 => 'idSensor',    2 => 'long',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\PlatformController::sensorDataAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'long',    ),    1 =>     array (      0 => 'text',      1 => '/long',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idSensor',    ),    3 =>     array (      0 => 'text',      1 => '/sensor',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idStation',    ),    5 =>     array (      0 => 'text',      1 => '/dashboard/station',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sensorDataUpdate' => array (  0 =>   array (    0 => 'idStation',    1 => 'idSensor',    2 => 'lastId',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\PlatformController::sensorDataUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'lastId',    ),    1 =>     array (      0 => 'text',      1 => '/lastid',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idSensor',    ),    3 =>     array (      0 => 'text',      1 => '/sensor',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idStation',    ),    5 =>     array (      0 => 'text',      1 => '/dashboard/update/station',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'alertData' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\PlatformController::AlertAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/dashboard/alerts/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'alertDataUpdate' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\PlatformController::AlertUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/dashboard/alerts/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'alert' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ViewController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/alertas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'scada' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ViewController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/scada',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_view_about' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ViewController::aboutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/about',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_view_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ViewController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_view_freestations' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ViewController::freestationsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/freestations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
